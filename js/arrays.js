// Состав смузи

var liquids = ['вода', 'молоко', 'сок', 'чай', 'йогурт'];
var fruits = ['киви', 'банан', 'персик', 'манго', 'груша', 'ананас'];
var greens = ['мята', 'шпинат', 'руккола', 'петрушка', 'базилик'];

// Выбор посетителя

var chosenLiquid = 1;
var chosenFruit = 3;
var chosenGreen = 2;

// Заказ

var order = '';

order = 'Основа — ' + liquids[chosenLiquid - 1] + ', фрукт — ' + fruits[chosenFruit - 1] + ', зелень — ' + greens[chosenGreen - 1];

/* Техническое задание
Напиши программу, которая формирует заказ в виде строки.
Массив с вариантами основы для смузи записан в переменную liquids.
Массив с фруктами находится в переменной fruits.
Массив с зеленью записан в переменную greens.
Выбор посетителя записан в виде чисел в переменные chosenLiquid (индекс выбранной основы для смузи), 
chosenFruit (выбранный фрукт), chosenGreen (выбранная зелень).
Обрати внимание, что посетители выбирают пункты в электронном меню, где нумерация начинается с единицы, 
а не с нуля, как в массивах. Учти это при решении.
Собери строку с заказом посетителя вида 'Основа — ' + основа для смузи + ', фрукт — ' + выбранный фрукт + ', зелень — ' + выбранная зелень. Запиши результат в переменную order.
*/

var groceries = ['чай', 'шпроты', 'печенье', 'сахар', 'чипсы'];
var shoppingList = groceries[0];

for (var i = 1; i < groceries.length; i++) {
    shoppingList += ', ' + groceries[i];
}

/* Техническое задание
Напиши программу, которая составит из элементов массива список покупок.
В результате должна получиться строка с элементами массива через запятую вида 'элемент, элемент, элемент'.
Каждый элемент должен быть отделён запятой, точка в конце строки не нужна. И помни про пробелы перед всеми словами, кроме первого.
Элементы должны добавляться в строку последовательно, начиная с самого первого элемента массива, заканчивая последним.
Массив с покупками записан в переменную groceries.
Строку со списком покупок записывай в переменную shoppingList.
*/

var numbers = [2, 4, 7, 4, 4, 2];
var number = 4;

var lastIndex = -1;

for (var i = 0; i < numbers.length; i++) {
  if (numbers[i] === number) {
    lastIndex = i;
  }
}

console.log(lastIndex);

/* Техническое задание
Напишите программу, которая будет находить последний индекс элемента в массиве.
Массив записан в переменную numbers.
Элемент, последний индекс которого надо найти, записан в переменную number.
Создайте переменную lastIndex и записывайте в неё последний индекс числа number. Если числа number в массиве нет, переменная lastIndex должна быть равна -1.
*/

var luggage = ['пакет', 'мяч', 'тапки', 'когтеточка', 'коробка', 'миска', 'мята'];
var startIndex = 2;
var quantity = 3;
var chosenLuggage = [];

for (var i = startIndex; i < quantity + startIndex; i++) {
  chosenLuggage.push(luggage[i]);  
}

console.log(chosenLuggage);

// заполняемыйМассив.методДобавитьЭлементВКонецМассива(исходныйМассив[элементИсходногоМассива]);


fillerArray.push(sourceArray[i]); // написать 100 раз!*******************************************************************


/* Техническое задание
Напиши программу, которая на основе одного массива c багажом создаст другой.
Изначальный массив с багажом записан в переменную luggage.
Индекс элемента, с которого нужно начинать добавлять багаж (включая этот элемент), записан в переменную startIndex.
Количество элементов, которые нужно взять с собой записано в переменную quantity.
Собери новый массив на основе изначального, добавляя элементы последовательно (от меньшего индекса к большему). Выбирай определённое количество элементов из массива luggage, начиная с элемента с индексом startIndex, и добавляй их в новый массив. Он должен быть записан в переменную chosenLuggage.
Для добавления элементов в новый массив можешь использовать команду array.push().
*/

var books = ['Улисс', 'Маугли', 'Сияние', 'Ревизор', 'Гамлет', 'Обломов', 'Дюймовочка', 'Шантарам', 'Вий', 'Сильмариллион', 'Оно'];
var minNumber = 3;
var maxNumber = 5;
var filteredBooks = [];

for (var i = 0; i < books.length; i++) {
  if (books[i].length >= minNumber && books[i].length <= maxNumber) {
    filteredBooks.push(books[i]);
  }  
}

console.log(filteredBooks);

/* Техническое задание
Мяу! Напиши программу, которая на основе одного массива с книгами создаст другой.
Массив книг записан в переменную books.
В переменную minNumber записано минимальное количество букв в названии книги (включительно), а в переменную maxNumber записано максимальное число букв (включительно). Чтобы найти количество букв в названии, используй команду строка.length.
Собери новый массив на основе изначального, добавляя элементы последовательно (от меньшего индекса к большему).
Результат запиши в переменную filteredBooks.
Для добавления элементов в новый массив используй команду array.push().
*/

// Алфавит
var symbols = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я', 'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я', ' ', '.', ',', '—', '!'];

// Смещение
var shift = 10;

// Закодированное сообщение
var encodedMessage = [8, 28, 36, 52, 56, 40, 23, 31, 56, 39, 38, 28, 48, 52, 58, 56, 38, 27, 32, 37, 56, 40, 23, 31, 56, 39, 38, 41, 39, 32, 57];

//Раскодированное сообщение
var decodedMessage = '';

// for (var i = 0; i < encodedMessage.length; i++) {
//   encodedMessage[i] += shift;
  
//   if (encodedMessage[i] > symbols.length) {
//     encodedMessage[i] -= symbols.length;
//   }
//   decodedMessage += symbols[encodedMessage[i]];
// }

for(var i = 0; i < encodedMessage.length; i++){
  decodedMessage += symbols[(encodedMessage[i] + shift) % symbols.length]; // очень сильно и непонятно
}

console.log(decodedMessage);

/* Техническое задание
Мне нужна новая программа расшифровки.
Есть массив symbols, в котором хранится алфавит (буквы и другие символы).
Есть массив encodedMessage, в котором хранится зашифрованное сообщение. Каждый элемент этого массива — это индекс символа из массива symbols.
Индексы сдвинуты на величину в переменной shift. Пример: элемент из зашифрованного массива равен единице, значит с учётом сдвига десять это символ с индексом одиннадцать в массиве с алфавитом, то есть «К».
Программа дешифровки должна переводить элементы из массива с шифровкой в символы из массива алфавита и склеивать из них расшифрованную строку. Эту строку храним в переменной decodedMessage.
Если индекс со смещением выходит за пределы алфавита, то нужно вычесть из этого индекса длину алфавита (большие индексы шифруют символы в начале алфавита).
*/

var usersData = ['Виталий Иванович', 'Иннокентий Петрович', 'Александр Александрович', 'Игорь Олегович', 'Евгений Петрович', 'Игнат Денисович', 'Сергей Александрович', 'Семён Петрович'];
var query = 'Александрович';
var matchingUsers = 0;
var matchingUsersArr = [];

// 1 вариант
for (var i = 0; i < usersData.length; i++) {  
  if (usersData[i].indexOf(query) >= 0) {
    matchingUsersArr.push(usersData[i]);
  }
}

matchingUsers = matchingUsersArr.length

// 2 вариант
for (var i = 0; i < usersData.length; i++ ) {
  if (usersData[i].indexOf(query) >= 0) {
    matchingUsers++;
  }
}

/* Техническое задание
Напиши программу, которая будет собирать статистику из пользовательских данных.
Массив с данными записан в переменную usersData.
Найди все элементы массива с данными, в которых содержится определённая строка. Эта искомая строка записана в переменную query.
Количество подходящих элементов (пользователей), которые подходят под критерий, запиши в переменную matchingUsers.
Чтобы проверить наличие строки в элементе массива, используй команду indexOf().
*/

var indicators = ['сила', 'гибкость', 'выносливость', 'скорость', 'ловкость'];
var levels = [8, 15, 9, 12, 11];
var trainingTime = 30;

if (trainingTime <= 30) {
  levels[indicators.indexOf('скорость')] += 3;
  levels[indicators.indexOf('ловкость')] += 3;
} else if (trainingTime > 30 && trainingTime <= 60 ) {
  levels[indicators.indexOf('гибкость')] += 3;
} else if (trainingTime > 60) {
  levels[indicators.indexOf('сила')] += 2;
  levels[indicators.indexOf('выносливость')] += 2; 
}

// второй вариант

// for (var i = 0; i < indicators.length; i++) {
//   if (trainingTime <= 30 && (indicators[i] === 'скорость' || indicators[i] === 'ловкость')) {
//     levels[i] += 3;
//   }

//   if (trainingTime > 30 && trainingTime <= 60 && indicators[i] === 'гибкость') {
//     levels[i] += 3;
//   }

//   if (trainingTime > 60 && (indicators[i] === 'сила' || indicators[i] === 'выносливость')) {
//     levels[i] += 2;
//   }
// }

console.log(levels);

/* Техническое задание
Напиши программу, которая будет следить за моими спортивными показателями.
В переменную indicators записан массив с моими спортивными характеристиками.
В массив levels записаны уровни каждого показателя. Каждый элемент этого массива соответствует по индексу элементу массива indicators.
В зависимости от времени тренировки, прокачиваются разные показатели. Время тренировки указано в минутах и записано в переменную trainingTime.
Если тренировка длится до 30 минут включительно, увеличивай скорость и ловкость на 3.
Если тренировка от 30 минут (не включая это значение) до одного часа (включая это значение), увеличивай гибкость на 3.
Если тренировка длится больше одного часа (не включая это значение), увеличивай силу и выносливость на 2.
*/

var numbers = [1, 4, 5, 9, 2, 5, 1];
var uniqueNumbers = [];

for (var i = 0; i < numbers.length; i++) {
  var doubling = 0;

  for (var j = 0; j < numbers.length; j++) {
    if (numbers[i] === numbers[j]) {
      doubling++;
    }
  }

  if (doubling === 1) {
    uniqueNumbers.push(numbers[i]);
  }
}

console.log(uniqueNumbers);

/* Техническое задание
Напишите программу, которая создаёт массив уникальных значений (тех, что не повторяются), взятых из первого массива.
Исходный массив записан в переменную numbers.
Переберите массив и последовательно добавьте уникальные значения в массив uniqueNumbers. Для добавления новых элементов в массив можете использовать метод
array.push().
*/

var numbers = [1, 3, 5, 7, 9, 11];
numbers.reverse();

// другой вариант

// for (i = 0; i < Math.round(numbers.length / 2); i++) {
//   var j = numbers.length - i - 1;
//   var swap = numbers[i];
//   numbers[i] = numbers[j];
//   numbers[j] = swap;
// }

console.log(numbers);

/* Техническое задание
Напишите программу, которая меняет массив так, чтобы его элементы шли в обратном порядке.
Массив записан в переменную numbers.
Обратите внимание, что вам нужно поменять порядок элеменов в массиве numbers. Создавать другую переменную для новой версии массива не нужно.
*/

// алгоритм сортировки массива выбором

var numbers = [3, 5, 15, 6, 2, 1];

for (var i = 0; i < numbers.length; i++) {
  var min = i;
  
  for (var j = i + 1; j < numbers.length; j++) {
    if (numbers[j] < numbers[min]) {
      min = j;
    }
  }
  
  var tmp = numbers[i];
  numbers[i] = numbers[min];
  numbers[min] = tmp;
}

console.log(numbers);

/* Техническое задание
Напиши сортировку массива выбором.
Массив записан в переменную numbers.
Отсортируй значения в массиве по возрастанию, от самого маленького значения к наибольшему.
*/